import{_ as s,c as e,o as a,a5 as i}from"./chunks/framework.CkGECXPw.js";const l="/my-blog/assets/vscode%E7%BB%88%E7%AB%AF_.CKH5EcEd.gif",n="/my-blog/assets/image.D6n4UQEI.png",t=JSON.parse('{"title":"在VSCode终端将当前开发路径改成特定符号$","description":"","frontmatter":{},"headers":[],"relativePath":"pages/工具/【VSCODE】终端路径改成特定符号.md","filePath":"pages/工具/【VSCODE】终端路径改成特定符号.md","lastUpdated":1727748149000}'),p={name:"pages/工具/【VSCODE】终端路径改成特定符号.md"},o=i(`<h1 id="在vscode终端将当前开发路径改成特定符号" tabindex="-1">在VSCode终端将当前开发路径改成特定符号$ <a class="header-anchor" href="#在vscode终端将当前开发路径改成特定符号" aria-label="Permalink to &quot;在VSCode终端将当前开发路径改成特定符号$&quot;">​</a></h1><p>如果你在 Windows 系统上使用 VSCode，并希望终端只显示 <code>$</code> 而不显示完整路径，可以按以下步骤进行配置：</p><h3 id="对于-powershell" tabindex="-1">对于 PowerShell <a class="header-anchor" href="#对于-powershell" aria-label="Permalink to &quot;对于 PowerShell&quot;">​</a></h3><ol><li><p><strong>打开 PowerShell 配置文件</strong>： 在 VSCode 终端中输入以下命令来打开 PowerShell 的配置文件（如果没有则会创建一个）：</p><div class="language-powershell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">notepad </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$PROFILE</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li><p><strong>修改提示符</strong>： 在打开的记事本中，添加以下内容：</p><div class="language-powershell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> prompt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;$ &quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li><li><p><strong>保存并关闭记事本</strong>。</p></li><li><p><strong>重启 VSCode 终端</strong>： 关闭当前终端，然后重新打开终端，你应该会看到只显示 <code>$</code>。</p></li></ol><h3 id="对于-git-bash" tabindex="-1">对于 Git Bash <a class="header-anchor" href="#对于-git-bash" aria-label="Permalink to &quot;对于 Git Bash&quot;">​</a></h3><ol><li><p><strong>打开 Git Bash 配置文件</strong>： 启动 Git Bash，然后输入：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nano</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.bashrc</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li><p><strong>修改提示符</strong>： 在文件最后添加：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PS1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;\\$ &#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li><p><strong>保存并退出</strong>（在 <code>nano</code> 中按 <code>Ctrl + O</code> 保存，然后按 <code>Ctrl + X</code> 退出）。</p></li><li><p><strong>重启 Git Bash 终端</strong>。</p></li></ol><h3 id="对于-cmd" tabindex="-1">对于 CMD <a class="header-anchor" href="#对于-cmd" aria-label="Permalink to &quot;对于 CMD&quot;">​</a></h3><p>CMD 默认不支持定制提示符为简单 <code>$</code>。不过你可以设置为 <code>&gt;</code> 或其他字符：</p><ol><li><p><strong>打开 CMD 配置文件</strong>（每次开启 CMD 时都需要设置）： 在 CMD 中输入：</p><div class="language-cmd vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cmd</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">prompt $G</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>这会将提示符改为 <code>&gt;</code>。如果只想要 <code>$</code>，你可以输入：</p><div class="language-cmd vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cmd</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">prompt </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">$</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li></ol><h3 id="最后" tabindex="-1">最后 <a class="header-anchor" href="#最后" aria-label="Permalink to &quot;最后&quot;">​</a></h3><p>根据你使用的终端类型，选择相应的方法进行修改。完成后重新启动终端，应该可以看到你想要的提示符样式。</p><h2 id="解决-notepad-profile-提示-系统无法找到文件" tabindex="-1">解决：<code>notepad $PROFILE</code> 提示“系统无法找到文件” <a class="header-anchor" href="#解决-notepad-profile-提示-系统无法找到文件" aria-label="Permalink to &quot;解决：\`notepad $PROFILE\` 提示“系统无法找到文件”&quot;">​</a></h2><blockquote><p>该问题通常出现在安装了<code>nvm</code>的开发人员</p></blockquote><p>如果在 VSCode 终端中运行 <code>notepad $PROFILE</code> 提示“系统无法找到文件”，可能是因为 PowerShell 配置文件尚未创建。请按照以下步骤来解决这个问题：</p><h3 id="检查并创建-powershell-配置文件" tabindex="-1">检查并创建 PowerShell 配置文件 <a class="header-anchor" href="#检查并创建-powershell-配置文件" aria-label="Permalink to &quot;检查并创建 PowerShell 配置文件&quot;">​</a></h3><ol><li><p><strong>打开 PowerShell</strong>：</p><ul><li>在 VSCode 中，确保你使用的是 PowerShell 终端。</li></ul></li><li><p><strong>手动创建配置文件</strong>：</p><ul><li>输入以下命令以检查 <code>$PROFILE</code> 路径：<div class="language-powershell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$PROFILE</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li>这将显示配置文件的路径，例如：<code>C:\\Users\\YourUsername\\Documents\\PowerShell\\Microsoft.PowerShell_profile.ps1</code>。</li></ul></li><li><p><strong>创建配置文件</strong>：</p><ul><li>如果该文件不存在，可以使用以下命令创建它：<div class="language-powershell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">New-Item</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Path </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$PROFILE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ItemType File </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Force</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li></ul></li><li><p><strong>打开配置文件</strong>：</p><ul><li>现在可以再试一次打开配置文件：<div class="language-powershell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">notepad </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$PROFILE</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li></ul></li><li><p><strong>添加修改提示符的代码</strong>：</p><ul><li>在记事本中，添加以下内容：<div class="language-powershell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> prompt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;$ &quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li></ul></li><li><p><strong>保存并关闭记事本</strong>。</p></li><li><p><strong>重启 VSCode 终端</strong>：</p><ul><li>关闭当前终端并重新打开，你应该会看到只显示 <code>$</code> 的提示符。</li></ul></li></ol><p>这样就能成功创建和修改 PowerShell 配置文件了！</p><h2 id="最终效果" tabindex="-1">最终效果 <a class="header-anchor" href="#最终效果" aria-label="Permalink to &quot;最终效果&quot;">​</a></h2><p>比如我就是使用<code>powershell</code>终端，上一个最终效果动态图：</p><p><img src="`+l+'" alt="alt text" loading="lazy"></p><p>以下就是我vscode内置的终端类型</p><p><img src="'+n+'" alt="alt text" loading="lazy"></p>',22),r=[o];function d(c,g,u,k,b,m){return a(),e("div",null,r)}const h=s(p,[["render",d]]),E=Object.freeze(Object.defineProperty({__proto__:null,__pageData:t,default:h},Symbol.toStringTag,{value:"Module"}));export{E as _,t as __pageData,h as default};
