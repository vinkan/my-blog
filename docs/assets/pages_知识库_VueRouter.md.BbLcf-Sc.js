import{_ as s,c as a,o as i,a5 as e}from"./chunks/framework.CkGECXPw.js";const n=JSON.parse('{"title":"🚴🏼‍♀️ Vue Router","description":"本文详细介绍了 Vue Router 的基本用法和进阶技巧。","frontmatter":{"title":"🚴🏼‍♀️ Vue Router","description":"本文详细介绍了 Vue Router 的基本用法和进阶技巧。"},"headers":[],"relativePath":"pages/知识库/VueRouter.md","filePath":"pages/知识库/VueRouter.md","lastUpdated":1727771484000}'),t={name:"pages/知识库/VueRouter.md"},l=e(`<h1 id="🚴🏼‍♀️-vue-router" tabindex="-1">🚴🏼‍♀️ Vue Router <a class="header-anchor" href="#🚴🏼‍♀️-vue-router" aria-label="Permalink to &quot;🚴🏼‍♀️ Vue Router&quot;">​</a></h1><nav class="table-of-contents"><ul><li><a href="#路由严格匹配模式">路由严格匹配模式</a></li></ul></nav><h2 id="路由严格匹配模式" tabindex="-1">路由严格匹配模式 <a class="header-anchor" href="#路由严格匹配模式" aria-label="Permalink to &quot;路由严格匹配模式&quot;">​</a></h2><ul><li>Sensitive 与 strict 路由配置</li></ul><blockquote><p>默认情况下，所有路由是不区分大小写的，并且能够匹配带有或不带有尾部斜线的路由。例如，路由<code>/users</code>将匹配<code>/users</code>、<code>/users/</code>、甚至<code>/Users/</code>。这种行为可以通过<code>strict</code>和<code>sensitive</code>选项来修改，它们既可以应用在整个全局路由上，又可以应用于当前路由上。</p></blockquote><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark has-highlighted vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> router</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> createRouter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  history: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createWebHistory</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  routes: [</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 将匹配 /users/posva 而非：</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // - /users/posva/ 当 strict: true</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // - /Users/posva 当 sensitive: true</span></span>
<span class="line highlighted"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    { path: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/users/:id&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, sensitive: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }, </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 将匹配 /users, /Users, 以及 /users/42 而非 /users/ 或 /users/42/</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    { path: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/users/:id?&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ],</span></span>
<span class="line highlighted"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  strict: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 适用于全局路由</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><div class="note custom-block github-alert"><p class="custom-block-title">总结</p><p>默认情况为<code>false</code></p></div>`,7),p=[l];function r(o,k,c,d,u,E){return i(),a("div",null,p)}const h=s(t,[["render",r]]),b=Object.freeze(Object.defineProperty({__proto__:null,__pageData:n,default:h},Symbol.toStringTag,{value:"Module"}));export{b as _,n as __pageData,h as default};
