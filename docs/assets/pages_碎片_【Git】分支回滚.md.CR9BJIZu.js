import{_ as i,c as s,o as e,a5 as a}from"./chunks/framework.BMqj9mQ5.js";const t=JSON.parse('{"title":"代码回滚","description":"","frontmatter":{},"headers":[],"relativePath":"pages/碎片/【Git】分支回滚.md","filePath":"pages/碎片/【Git】分支回滚.md","lastUpdated":1726497216000}'),l={name:"pages/碎片/【Git】分支回滚.md"},n=a('<h1 id="代码回滚" tabindex="-1">代码回滚 <a class="header-anchor" href="#代码回滚" aria-label="Permalink to &quot;代码回滚&quot;">​</a></h1><nav class="table-of-contents"><ul><li><a href="#方法-1-使用-git-reset">方法 1: 使用 git reset</a></li><li><a href="#方法-2-使用-git-revert">方法 2: 使用 git revert</a></li><li><a href="#方法-3-使用交互式-rebase">方法 3: 使用交互式 rebase</a></li><li><a href="#注意事项">注意事项</a></li><li><a href="#总结">总结</a></li></ul></nav><p>git commit 之后，怎么把他从记录上拉下来并且抹掉记录</p><p>要从 Git 的记录中删除已经提交的 commit 并抹掉记录，可以使用以下几种方法。选择适合你的情况的方法：</p><h3 id="方法-1-使用-git-reset" tabindex="-1">方法 1: 使用 <code>git reset</code> <a class="header-anchor" href="#方法-1-使用-git-reset" aria-label="Permalink to &quot;方法 1: 使用 `git reset`&quot;">​</a></h3><p><code>git reset</code> 可以用来重置当前分支的 HEAD 到指定状态。以下步骤将撤销最近的 commit 并且从历史记录中抹去它：</p><ol><li><p>查看提交日志以找到要撤销的 commit：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> log</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li><p>重置到特定的 commit（这个 commit 之前的所有 commit 将被保留）：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> reset</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --hard</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">commit-has</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">h</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>例如，如果要删除最近的 commit：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> reset</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --hard</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> HEAD~1</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><code>HEAD~1</code> 表示上一个 commit，<code>HEAD~2</code> 表示上上个 commit，以此类推。</p></li></ol><h3 id="方法-2-使用-git-revert" tabindex="-1">方法 2: 使用 <code>git revert</code> <a class="header-anchor" href="#方法-2-使用-git-revert" aria-label="Permalink to &quot;方法 2: 使用 `git revert`&quot;">​</a></h3><p>如果你已经推送了这些提交，并且其他人可能已经基于这些提交做了工作，使用 <code>git revert</code> 更安全。<code>git revert</code> 创建一个新的 commit 来撤销指定的 commit，而不会从历史记录中抹去原始 commit。</p><ol><li><p>查看提交日志以找到要撤销的 commit：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> log</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li><p>生成一个新的 commit 来撤销指定的 commit：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> revert</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">commit-has</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">h</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>例如，撤销最近的 commit：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> revert</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> HEAD</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li></ol><h3 id="方法-3-使用交互式-rebase" tabindex="-1">方法 3: 使用交互式 rebase <a class="header-anchor" href="#方法-3-使用交互式-rebase" aria-label="Permalink to &quot;方法 3: 使用交互式 rebase&quot;">​</a></h3><p>如果你需要从历史记录中删除某个 commit（不是最最近的），可以使用交互式 rebase。</p><ol><li><p>开始交互式 rebase：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rebase</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> HEAD~n</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>其中 <code>n</code> 是你想要查看的最近的 commit 数量。例如，如果你想查看最近 5 个提交：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rebase</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> HEAD~5</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li><p>在打开的编辑器中，找到你要删除的 commit，并将其前面的 <code>pick</code> 改为 <code>drop</code> 或直接删除这一行。</p></li><li><p>保存并关闭编辑器，Git 将会应用变更并重写历史记录。</p></li></ol><h3 id="注意事项" tabindex="-1">注意事项 <a class="header-anchor" href="#注意事项" aria-label="Permalink to &quot;注意事项&quot;">​</a></h3><ul><li><strong>使用 <code>git reset --hard</code></strong>：会丢失所有未提交的更改，请确保你不需要这些更改或者已经将其保存到其他地方。</li><li><strong>使用 <code>git rebase -i</code></strong>：重写历史记录可能会导致与其他人工作的冲突。如果你已经将更改推送到远程仓库，并且其他人基于这些更改进行了工作，使用 <code>git rebase</code> 可能不是最好的选择。</li><li><strong>使用 <code>git revert</code></strong>：安全地撤销提交，但不会从历史记录中抹去原始提交。</li></ul><h3 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h3><p>如果你只是想要从本地仓库删除最近的提交并抹去记录，<code>git reset --hard HEAD~1</code> 是最简单的方法。如果你已经推送了这些提交并且需要确保安全，使用 <code>git revert</code>。对于更复杂的历史重写，使用 <code>git rebase -i</code>。根据你的具体需求选择合适的方法。</p>',17),r=[n];function p(d,o,c,k,g,b){return e(),s("div",null,r)}const h=i(l,[["render",p]]),u=Object.freeze(Object.defineProperty({__proto__:null,__pageData:t,default:h},Symbol.toStringTag,{value:"Module"}));export{u as _,t as __pageData,h as default};
